---
import BaseLayout from "@/src/layouts/BaseLayout.astro";

import { auth } from "../../lib/lucia";

let usernameInput = "";
let errorMessage = "";

// check for form submissions
if (Astro.request.method === "POST") {
  const formData = await Astro.request.formData();
  const username = formData.get("username");
  const password = formData.get("password");
  if (typeof username === "string") {
    usernameInput = username;
  }
  // basic check
  const validUsername =
    typeof username === "string" &&
    username.length >= 4 &&
    username.length <= 31;
  const validPassword =
    typeof password === "string" &&
    password.length >= 6 &&
    password.length <= 255;
  if (validUsername && validPassword) {
    try {
      const user = await auth.createUser({
        key: {
          providerId: "username", // auth method
          providerUserId: username.toLowerCase(), // unique id when using "username" auth method
          password, // hashed by Lucia
        },
        attributes: {
          username,
        },
      });
      const session = await auth.createSession({
        userId: user.userId,
        attributes: {},
      });
      Astro.locals.auth.setSession(session); // set session cookie
      return Astro.redirect("/", 302); // redirect to profile page
    } catch (e: any) {
      console.log(e);
      // this part depends on the database you're using
      // check for unique constraint error in user table
      if (e.code === "SQLITE_CONSTRAINT_UNIQUE") {
        errorMessage = "Username already taken";
        Astro.response.status = 400;
      } else {
        errorMessage = "An unknown error occurred";
        Astro.response.status = 500;
      }
    }
  } else {
    errorMessage = "Invalid input";
    Astro.response.status = 400;
  }
}

const session = await Astro.locals.auth.validate();
if (session) return Astro.redirect("/", 302); // redirect to profile page

import { Input } from "@/src/components/ui/input";
import { Button } from "@/src/components/ui/button";
import { Label } from "@/src/components/ui/label";
---

<BaseLayout title="Sign up">
  <div
    class="mx-auto flex w-full flex-col justify-center space-y-6 sm:w-[350px]"
  >
    <div class="flex flex-col space-y-2 text-center">
      <h1 class="text-2xl font-semibold tracking-tight">Create an account</h1>
      <p class="text-sm text-muted-foreground">
        Sign in to create your account
      </p>
    </div>

    <form class="mt-2" method="post">
      <Label htmlFor="username">Username</Label>
      <Input name="username" id="username" /><br />
      <Label htmlFor="password">Password</Label>
      <Input type="password" name="password" id="password" /><br />

      <Button className="w-full" type="submit">Sign in</Button>
      <p class="error">{errorMessage}</p>
      <p class="text-sm text-muted-foreground mt-4">
        Already have an account?{" "}
        <a href="/login">Sign in</a>
      </p>
    </form>

    <p class="px-8 text-center text-sm text-muted-foreground">
      By clicking continue, you agree to our{" "}
      <a href="/terms" class="hover:text-brand underline underline-offset-4">
        Terms of Service
      </a>{" "}
      and{" "}
      <a href="/privacy" class="hover:text-brand underline underline-offset-4">
        Privacy Policy
      </a>
      .
    </p>
  </div>
</BaseLayout>
